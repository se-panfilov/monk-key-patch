{"version":3,"sources":["monk-key-patch.js"],"names":["jsvat","exports","override","object","methodName","callback","after","extraBehavior","original","returnValue","apply","this","arguments","before","compose","call","benchmark","startTime","Date","getTime","finishTime","console","log","memoize","memo","x","Object","prototype","hasOwnProperty","module"],"mappings":"AAAA,GAAIA,OAAQ,WACV,YAEA,IAAIC,IACFC,SAAU,SAAUC,EAAQC,EAAYC,GACtCF,EAAOC,GAAcC,EAASF,EAAOC,KAEvCE,MAAO,SAAUC,GACf,MAAO,UAAUC,GACf,MAAO,YACL,GAAIC,GAAcD,EAASE,MAAMC,KAAMC,UAEvC,OADAL,GAAcG,MAAMC,KAAMC,WACnBH,KAIbI,OAAQ,SAAUN,GAChB,MAAO,UAAUC,GACf,MAAO,YAEL,MADAD,GAAcG,MAAMC,KAAMC,WACnBJ,EAASE,MAAMC,KAAMC,cAIlCE,QAAS,SAAUP,GACjB,MAAO,UAAUC,GACf,MAAO,YACL,MAAOD,GAAcQ,KAAKJ,KAAMH,EAASE,MAAMC,KAAMC,eAI3DI,UAAW,SAAUR,GACnB,MAAO,YACL,GAAIS,IAAY,GAAIC,OAAOC,UACvBV,EAAcD,EAASE,MAAMC,KAAMC,WACnCQ,GAAa,GAAIF,OAAOC,SAE5B,OADAE,SAAQC,IAAI,OAAQF,EAAaH,EAAW,OACrCR,IAGXc,QAAS,SAAUf,GACjB,GAAIgB,KACJ,OAAO,UAAUC,GACf,MAAIC,QAAOC,UAAUC,eAAeb,KAAKS,EAAMC,GAAWD,EAAKC,IAC/DD,EAAKC,GAAKjB,EAASO,KAAKJ,KAAMc,GACvBD,EAAKC,MASlB,OAFsB,gBAAXI,SAAuBA,OAAO5B,UAAS4B,OAAO5B,QAAUA,GAE5DA","file":"monk-key-patch.min.js","sourcesContent":["var jsvat = (function () {\n  'use strict';\n\n  var exports = {\n    override: function (object, methodName, callback) {\n      object[methodName] = callback(object[methodName])\n    },\n    after: function (extraBehavior) {\n      return function (original) {\n        return function () {\n          var returnValue = original.apply(this, arguments);\n          extraBehavior.apply(this, arguments);\n          return returnValue\n        }\n      }\n    },\n    before: function (extraBehavior) {\n      return function (original) {\n        return function () {\n          extraBehavior.apply(this, arguments);\n          return original.apply(this, arguments);\n        }\n      }\n    },\n    compose: function (extraBehavior) {\n      return function (original) {\n        return function () {\n          return extraBehavior.call(this, original.apply(this, arguments));\n        }\n      }\n    },\n    benchmark: function (original) {\n      return function () {\n        var startTime = new Date().getTime();\n        var returnValue = original.apply(this, arguments);\n        var finishTime = new Date().getTime();\n        console.log('Took', finishTime - startTime, 'ms.');\n        return returnValue;\n      }\n    },\n    memoize: function (original) {// XXX: Work only with functions with 1 argument.\n      var memo = {};\n      return function (x) {\n        if (Object.prototype.hasOwnProperty.call(memo, x)) return memo[x];\n        memo[x] = original.call(this, x);\n        return memo[x];\n      }\n    }\n  };\n\n\n  //Support of node.js\n  if (typeof module === 'object' && module.exports) module.exports = exports;\n\n  return exports;\n})();\n"],"sourceRoot":"/source/"}